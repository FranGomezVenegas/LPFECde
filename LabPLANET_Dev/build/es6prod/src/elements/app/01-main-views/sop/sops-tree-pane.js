define(["../../../../../node_modules/@polymer/polymer/polymer-element.js","../../../../../node_modules/pwa-helpers/connect-mixin.js","../../../../store.js","../../../../../node_modules/@polymer/iron-selector/iron-selector.js","../../../../../node_modules/@polymer/iron-collapse/iron-collapse.js","../../../../../node_modules/@polymer/paper-badge/paper-badge.js","../../mixin/frontend-sopuser.js","../../Redux/actions/tabs_actions.js"],function(_polymerElement,_connectMixin,_store,_ironSelector,_ironCollapse,_paperBadge,_frontendSopuser,_tabs_actions){"use strict";class SopsTreePane extends(0,_frontendSopuser.FrontendSopUser)((0,_connectMixin.connect)(_store.store)(_polymerElement.PolymerElement)){static get properties(){return{horizontal:{type:Boolean},openedSOPs:{type:Boolean,value:!1,reflectToAttribute:!0},noAnimation:{type:Boolean},SOPList:Object,finalToken:{type:String,observer:"onFinalTokenFilled"}}}stateChanged(state){this.finalToken=state.app.user.finalToken}toggleSOP(){this.$.SOP.toggle()}_getTextSOP(openedSOPs){return openedSOPs?"SOPs (Cerrar)":"SOPs (Abrir)"}ajaxAppSopPaneParams(finalToken){return{finalToken:finalToken}}crearTab(e){e.stopPropagation();_store.store.dispatch((0,_tabs_actions.addTab)({lp_frontend_page_name:e.detail.procEvent.lp_frontend_page_name,tabName:e.detail.procedure.name+"-"+e.detail.procEvent.lp_frontend_page_name,tabLabel_en:e.detail.procedure.label_en+"-"+e.detail.procEvent.label_en,tabLabel_es:e.detail.procedure.label_es+"-"+e.detail.procEvent.label_es,procedure:e.detail.procedure,tabEsignRequired:!1,tabConfirmUserRequired:!1}));var curTab=[];curTab.tabName=e.detail.procedure.name+"-"+e.detail.procEvent.lp_frontend_page_name;_store.store.dispatch((0,_tabs_actions.setCurrentTab)(curTab))}static get template(){return _polymerElement.html`
            <vaadin-button id="triggerSOP" hidden="{{openedSOPs}}" on-click="toggleSOP" aria-expanded\$="[[openedSOPs]]" aria-controls="collapse">[[_getTextSOP(openedSOPs)]]</vaadin-button>
            <vaadin-button id="triggerSOP" hidden="{{!openedSOPs}}" on-click="toggleSOP" aria-expanded\$="[[openedSOPs]]" aria-controls="collapse">[[_getTextSOP(openedSOPs)]]</vaadin-button>
            <iron-collapse id="SOP" opened="{{openedSOPs}}" horizontal="[[horizontal]]" no-animation="[[noAnimation]]" tabindex="1">
                <template is="dom-repeat" items="{{SOPList}}" as="currsop">                      
                    <template is="dom-repeat"  items="{{currsop.definition}}" as="currentfield">                    
                        <field-controller id="{{currentfield.name}}" on-field-tree-list-clicked="crearTab" tab-index="{{index}}" field="{{currentfield}}" procedure="{{currsop}}"></field-controller>                                    
                    </template>            
                </template> 
            </iron-collapse>

        `}onFinalTokenFilled(){//console.log('onFinalTokenFilled', this.finalToken);
this.getSopPane({finalToken:this.finalToken})}}customElements.define("sops-tree-pane",SopsTreePane)});