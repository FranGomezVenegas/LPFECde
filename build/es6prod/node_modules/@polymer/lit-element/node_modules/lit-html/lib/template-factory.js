define(["exports","./template.js"],function(_exports,_template){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.templateFactory=templateFactory;_exports.templateCaches=void 0;/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */ /**
 * The default TemplateFactory which caches Templates keyed on
 * result.type and result.strings.
 */function templateFactory(result){let templateCache=templateCaches.get(result.type);if(templateCache===void 0){templateCache=new Map;templateCaches.set(result.type,templateCache)}let template=templateCache.get(result.strings);if(template===void 0){template=new _template.Template(result,result.getTemplateElement());templateCache.set(result.strings,template)}return template}// The first argument to JS template tags retain identity across multiple
// calls to a tag for the same literal, so we can cache work done per literal
// in a Map.
const templateCaches=new Map;//# sourceMappingURL=template-factory.js.map
_exports.templateCaches=templateCaches});