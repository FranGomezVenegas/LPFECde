define(["require","../../../../../node_modules/@polymer/polymer/polymer-element.js","../../../../../node_modules/pwa-helpers/connect-mixin.js","../../../../store.js","../../../../../node_modules/@polymer/paper-dialog/paper-dialog.js","../../../internalComponents/dialogs/simple-modal-dialog.js","../../../internalComponents/dialogs/esign-dialog.js","../../../internalComponents/dialogs/confirmuser-dialog.js","../../../app/mixin/authentication-api.js","./api-sample.js","./frontend-sample.js","../../../app/Redux/actions/esign-actions.js","../../../app/Redux/actions/confirmuser-actions.js","../../../../config/app-config.js","../03config/config-process.js"],function(_require,_polymerElement,_connectMixin,_store,_paperDialog,_simpleModalDialog,_esignDialog,_confirmuserDialog,_authenticationApi,_apiSample,_frontendSample,_esignActions,_confirmuserActions,_appConfig,_configProcess){"use strict";_require=babelHelpers.interopRequireWildcard(_require);//import '../../internalComponents/dialogs/simple-modal-dialog.js';
class SampleElements extends(0,_apiSample.ApiSample)((0,_authenticationApi.AuthenticationApi)((0,_frontendSample.FrontendSample)((0,_connectMixin.connect)(_store.store)(_polymerElement.PolymerElement)))){static get properties(){return{schemaPrefix:{type:String,value:_configProcess.schema_name},finalToken:String,backEndData:Object,buttonName:String,analysisListToDisplay:String,givenSampleAnalysisToDisplay:{type:String,value:_configProcess.sampleResults_sampleAnalysisListToDisplay},givenSampleAnalysisEnterResultToDisplay:String,cocUsersListFieldToDisplay:String,cocSampleHistoryFieldToDisplay:String,currTabConfirmUserRequired:Boolean,currTabEsignRequired:Boolean,fieldsDialogAddComment:{type:Array,notify:!0,bubble:!0,value:[{name:"Comment",label_en:"Add Comment",label_es:"A\xF1ade comentario",type:"text",password:"false",read_only:!1,value:""}]},fieldsDialogSetSamplingDate:{type:Array,notify:!0,bubble:!0,value:[{name:"SamplingDate",label_en:"Sampling Date",label_es:"Fecha de Muestreo",type:"date",read_only:!1}]},validationNotCorrectMessage:{type:Object,value:_appConfig.appConfirmUserOrEsign_notCorrectMessage},selectedLanguage:{type:String}}}static get template(){return _polymerElement.html`
        <style>
        paper-dialog{
            top:100px; height:0px; width:0px;
        }
        </style>
        <esign-dialog></esign-dialog>
        <confirmuser-dialog></confirmuser-dialog>

        <paper-dialog id="addComment">
            <simple-modal-dialog action-name="" dialog-elements="{{fieldsDialogAddComment}}" on-dialog-button-clicked="dialogClosedAddComment"> </simple-modal-dialog>
        </paper-dialog>
        <paper-dialog id="setSamplingDate">
            <simple-modal-dialog dialog-elements="{{fieldsDialogSetSamplingDate}}" on-dialog-button-clicked="dialogClosedSetSamplingDate"> </simple-modal-dialog>
        </paper-dialog>
        <paper-dialog id="testAssignment">
            <list-modal-coc-users list-header="{{cocUsersListFieldToDisplay}}" list-rows="{{cocUsersList}}" dialog-elements="{{fieldsDialogEnterResult}}" on-dialog-button-clicked="dialogClosedCoCUsersList"> </list-modal-coc-users>        
            <!-- <simple-modal-dialog dialog-elements="{{fieldsDialogSetSamplingDate}}" on-dialog-button-clicked="dialogClosedSetSamplingDate"> </simple-modal-dialog> -->
        </paper-dialog>        

        <paper-dialog id="addSampleAnalysis">
          <list-modal-addsampleanalysis list-header="{{analysisListToDisplay}}" 
              list-rows="{{analysisList}}" dialog-elements="{{fieldsDialogAddComment}}" 
              on-dialog-button-clicked="dialogClosedAddSampleAnalysis"> 
          </list-modal-addsampleanalysis>
        </paper-dialog>    

        <paper-dialog id="givenSampleAnalysisList">
            <list-modal-sampleanalysis list-header="{{givenSampleAnalysisToDisplay}}" list-rows="{{givenSampleAnalysisList}}" dialog-elements="{{fieldsDialogAddComment}}" 
            on-dialog-button-clicked="dialogClosedAddSampleAnalysis"> </list-modal-sampleanalysis>
        </paper-dialog>    
        
        <paper-dialog id="givenSampleEnterResult">
            <list-modal-enterresults final-token="[[finalToken]]" schema-prefix="[[schemaPrefix]]" 
            list-header="{{givenSampleAnalysisEnterResultToDisplay}}" list-rows="{{givenSampleAnalysisResultEntryList}}" 
            dialog-elements="{{fieldsDialogEnterResult}}" 
            on-dialog-button-clicked="dialogClosedEnterResult"> </list-modal-enterresults>
        </paper-dialog>    

        <paper-dialog id="chainOfCustodyStartChange">
            <list-modal-coc-users list-header="{{cocUsersListFieldToDisplay}}" list-rows="{{cocUsersList}}" dialog-elements="{{fieldsDialogEnterResult}}" on-dialog-button-clicked="dialogClosedCoCUsersList"> </list-modal-coc-users>        
        </paper-dialog>  

        <paper-dialog id="chainOfCustodyHistory">
            <list-modal-coc-samplehistory list-header="{{cocSampleHistoryFieldToDisplay}}" list-rows="{{cocSampleHistory}}" dialog-elements="{{fieldsDialogEnterResult}}" on-dialog-button-clicked="dialogClosedCoCSampleHistory"> </list-modal-coc-samplehistory>        
        </paper-dialog>  

        `}stateChanged(state){this.selectedLanguage=state.app.user.appLanguage;this.finalToken=state.app.user.finalToken;if(null!=state.processUs){this.forResultsSamples=state.processUs.forResultsSamples;this.analysisList=state.processUs.analysisList;this.givenSampleAnalysisList=state.processUs.givenSampleAnalysisList;this.givenSampleAnalysisResultEntryList=state.processUs.givenSampleAnalysisResultEntryList;this.cocSampleHistory=state.processUs.cocSampleHistory;this.cocUsersList=state.processUs.cocUsersList}this.currTabEsignRequired=state.tabs.currTabEsignRequired;this.currTabConfirmUserRequired=state.tabs.currTabConfirmUserRequired}actionTrigger(buttonName,backEndData,buttonDefinition){this.buttonName=buttonName;this.backEndData=backEndData;//    console.log('sample-elements >> actionTrigger >> backEndData', backEndData, 'this.backEndData', this.backEndData, 'buttonDefinition', buttonDefinition);  
//if (this.currTabEsignRequired){
if(buttonDefinition&&buttonDefinition.esign_required){_store.store.dispatch((0,_esignActions.openEsignDialog)(this.actionTriggerNext.bind(this),this.actionTriggerAbort.bind(this)));return}//if (this.currTabConfirmUserRequired){
if(buttonDefinition&&buttonDefinition.confirmuser_required){_store.store.dispatch((0,_confirmuserActions.openConfirmUserDialog)(this.actionTriggerNext.bind(this),this.actionTriggerAbort.bind(this)));return}this.actionTriggerNext()}actionTriggerAbort(){var message="";switch(this.selectedLanguage){case"es":message=this.validationNotCorrectMessage.message_es;break;//message=response.data.message_es; break;            
default:message=this.validationNotCorrectMessage.message_en;break;//message=response.data.message_en; break;
}this.dispatchEvent(new CustomEvent("toast-error",{bubbles:!0,composed:!0,detail:message}));this.loading=!1}actionTriggerNext(){var buttonName=this.buttonName,backEndData=this.backEndData,datas=[];datas.schemaPrefix=this.schemaPrefix;this.backEndData.actionName=buttonName;datas.finalToken=this.finalToken;datas.sample_id=+this.backEndData.selectedObject.sample_id;datas.sampleId=+this.backEndData.selectedObject.sample_id;var actionName=buttonName.toUpperCase();console.log("sample-elements >> actionTriggerNext >> backEndData",backEndData,"this.backEndData",this.backEndData,"buttonName",buttonName);switch(buttonName.toUpperCase()){case"SAMPLINGCOMMENTADD":this.$.addComment.actionName="SAMPLINGCOMMENTADD";this.$.addComment.open();break;case"SETSAMPLINGDATE":this.$.setSamplingDate.open();break;case"SAMPLINGCOMMENTREMOVE":case"INCUBATIONSTART":case"INCUBATIONEND":this.backEndData=backEndData;this.sampleActionTrigger(this.schemaPrefix,this.finalToken,buttonName,datas,datas.tabInfo,void 0);break;case"ADDSAMPLEANALYSIS":new Promise((res,rej)=>_require.default(["../04-procedure/dialogs/list-modal-addsampleanalysis.js"],res,rej));this.analysisListToDisplay=_configProcess.sampleResults_analysisListToDisplay;var actionName="ANALYSIS_ALL_LIST",paramsUrl="actionName="+actionName+"&finalToken="+this.finalToken+"&schemaPrefix="+this.schemaPrefix+"&fieldToRetrieve="+this.analysisListToDisplay;datas.actionName=actionName;datas.fieldToRetrieve=_configProcess.sampleResults_analysisListFieldsToRetrieve;datas.paramsUrl=paramsUrl;//datas.callBackFunction=this.openAddSampleAnalysisDialog.bind(this);
this.getAnalysisList(datas);this.$.addSampleAnalysis.open();break;case"CHANGEOFCUSTODYSTARTCHANGE":new Promise((res,rej)=>_require.default(["../04-procedure/dialogs/list-modal-coc-users.js"],res,rej));this.cocUsersListFieldToDisplay=_configProcess.sampleCustodian_cocUsersListFieldToDisplay;var actionName="CHANGEOFCUSTODY_USERS_LIST",paramsUrl="actionName="+actionName+"&finalToken="+this.finalToken+"&schemaPrefix="+this.schemaPrefix+"&fieldToRetrieve="+this.cocUsersListFieldToDisplay;datas.actionName=actionName;datas.fieldToRetrieve=_configProcess.sampleCustodian_cocUsersListFieldToRetrieve;datas.paramsUrl=paramsUrl;//datas.callBackFunction=this.openAddSampleAnalysisDialog.bind(this);
this.getGivenCocUsersList(datas);//console.log('ChangeOfCustodyHistory >> this.cocUsersList', this.cocUsersList, 'this.cocUsersListFieldToDisplay', this.cocUsersListFieldToDisplay);
this.$.chainOfCustodyStartChange.open();break;case"CHANGEOFCUSTODYHISTORY":new Promise((res,rej)=>_require.default(["../04-procedure/dialogs/list-modal-coc-samplehistory.js"],res,rej));var actionName="CHANGEOFCUSTODY_SAMPLE_HISTORY",paramsUrl="actionName="+actionName+"&finalToken="+this.finalToken+"&schemaPrefix="+this.schemaPrefix+"&fieldToRetrieve="+this.analysisListToDisplay;datas.actionName=actionName;datas.fieldToRetrieve=_configProcess.sampleCustodian_cocSampleHistoryFieldToRetrieve;datas.paramsUrl=paramsUrl;this.cocSampleHistoryFieldToDisplay=_configProcess.sampleCustodian_cocSampleHistoryFieldToDisplay;//datas.callBackFunction=this.openAddSampleAnalysisDialog.bind(this);
this.givenCocSampleHistory(datas);//console.log('ChangeOfCustodyHistory >> this.cocSampleHistory', this.cocSampleHistory, 'this.cocSampleHistoryFieldToDisplay', this.cocSampleHistoryFieldToDisplay);
this.$.chainOfCustodyHistory.open();break;case"COC_CONFIRMCHANGE":this.$.addComment.actionName=buttonName;this.$.addComment.open();break;this.backEndData=backEndData;this.sampleActionTrigger(this.schemaPrefix,this.finalToken,buttonName,datas,datas.tabInfo,void 0);break;case"COC_ABORTCHANGE":this.$.addComment.actionName=buttonName;this.$.addComment.open();break;case"ADDSAMPLEANALYSIS":this.analysisListToDisplay=_configProcess.sampleResults_analysisListToDisplay;var actionName="ANALYSIS_ALL_LIST",paramsUrl="actionName="+actionName+"&finalToken="+this.finalToken+"&schemaPrefix="+this.schemaPrefix+"&fieldToRetrieve="+this.analysisListToDisplay;datas.actionName=actionName;datas.fieldToRetrieve=_configProcess.sampleResults_analysisListFieldsToRetrieve;datas.paramsUrl=paramsUrl;//datas.callBackFunction=this.openAddSampleAnalysisDialog.bind(this);
this.getAnalysisList(datas);this.$.addSampleAnalysis.open();break;case"GIVENSAMPLEANALYSISLIST":new Promise((res,rej)=>_require.default(["../04-procedure/dialogs/list-modal-sampleanalysis.js"],res,rej));var actionName="GET_SAMPLE_ANALYSIS_LIST";this.givenSampleAnalysisToDisplay=_configProcess.sampleResults_sampleAnalysisListToDisplay;console.log("givenSampleAnalysisToDisplay",this.givenSampleAnalysisToDisplay);datas.actionName=actionName;datas.sampleAnalysisFieldToRetrieve=_configProcess.sampleResults_sampleAnalysisListFieldsToRetrieve;datas.sortFieldsName=this.sampleResults_sampleAnalysisListFieldToSort;datas.paramsUrl=backEndData.paramsUrl;//datas.callBackFunction=this.openAddSampleAnalysisDialog.bind(this);
this.getGivenSampleAnalysisList(datas);this.$.givenSampleAnalysisList.open();break;case"GIVENSAMPLEENTERRESULT":new Promise((res,rej)=>_require.default(["../04-procedure/dialogs/list-modal-enterresults.js"],res,rej));var actionName="GET_SAMPLE_ANALYSIS_RESULT_LIST";datas.actionName=actionName;datas.resultFieldToRetrieve=_configProcess.sampleResults_sampleAnalysisResultEntryFieldsToRetrieve;this.givenSampleAnalysisEnterResultToDisplay=_configProcess.sampleResults_sampleAnalysisResultEntryFieldsToDisplay;datas.sortFieldsName=_configProcess.sampleResults_sampleAnalysisResultEntryFieldToSort;datas.paramsUrl=backEndData.paramsUrl;//datas.callBackFunction=this.openAddSampleAnalysisDialog.bind(this);
this.getGivenSampleAnalysisResultEntry(datas);this.$.givenSampleEnterResult.open();break;case"TESTASSIGNMENT":console.log("sample-elements > TestAssignment");new Promise((res,rej)=>_require.default(["../04-procedure/dialogs/list-modal-coc-users.js"],res,rej));this.cocUsersListFieldToDisplay=_configProcess.sampleCustodian_cocUsersListFieldToDisplay;var actionName="TESTASSIGNMENT",paramsUrl="actionName="+actionName+"&finalToken="+this.finalToken+"&schemaPrefix="+this.schemaPrefix+"&fieldToRetrieve="+this.cocUsersListFieldToDisplay;datas.actionName=actionName;datas.fieldToRetrieve=_configProcess.sampleCustodian_cocUsersListFieldToRetrieve;datas.paramsUrl=paramsUrl;//datas.callBackFunction=this.openAddSampleAnalysisDialog.bind(this);
this.getGivenCocUsersList(datas);//console.log('ChangeOfCustodyHistory >> this.cocUsersList', this.cocUsersList, 'this.cocUsersListFieldToDisplay', this.cocUsersListFieldToDisplay);
this.$.chainOfCustodyStartChange.open();break;default:break;}return}dialogClosedCoCUsersList(e){var datas=[],buttonName="COC_STARTCHANGE";if("confirmed"!=e.detail.dialogState){return}datas.schemaPrefix=this.schemaPrefix;this.backEndData.actionName=buttonName;//actionName; //datas.paramsUrl=paramsUrl;
datas.sample_id=this.backEndData.selectedObject.sample_id;datas.user_name=e.detail.selectedItems[e.detail.selectedItems.length-1].user_name;datas.person_name=e.detail.selectedItems[e.detail.selectedItems.length-1].person_name;console.log("dialogClosedCoCUsersList",datas);this.sampleActionTrigger(this.schemaPrefix,this.finalToken,buttonName,datas,datas.tabInfo,void 0);return}dialogClosedAddComment(e){//console.log('dialogClosedAddComment >> this.$.addComment.actionName', this.$.addComment.actionName);    
var buttonName=this.$.addComment.actionName;if("confirmed"==e.detail.dialogState){var datas=[];datas.schemaPrefix=this.schemaPrefix;datas.sample_id=this.backEndData.selectedObject.sample_id;switch(buttonName){case"SAMPLINGCOMMENTADD"://var actionName='SAMPLINGCOMMENTADD';
this.backEndData.actionName=buttonName;//actionName; //datas.paramsUrl=paramsUrl;
datas.sample_comment=this.fieldsDialogAddComment[0].value;// datas.callBackFunction=this.refreshTable.bind(this);
this.sampleActionTrigger(this.schemaPrefix,this.finalToken,buttonName,datas,datas.tabInfo,void 0);case"COC_CONFIRMCHANGE"://var actionName='COC_ABORTCHANGE';
datas.schemaPrefix=this.schemaPrefix;this.backEndData.actionName=buttonName;//actionName; //datas.paramsUrl=paramsUrl;
datas.confirmChangeComment=this.fieldsDialogAddComment[0].value;this.sampleActionTrigger(this.schemaPrefix,this.finalToken,buttonName,datas,datas.tabInfo,void 0);break;case"COC_ABORTCHANGE"://var actionName='COC_ABORTCHANGE';
datas.schemaPrefix=this.schemaPrefix;this.backEndData.actionName=buttonName;//actionName; //datas.paramsUrl=paramsUrl;
datas.cancelChangeComment=this.fieldsDialogAddComment[0].value;this.sampleActionTrigger(this.schemaPrefix,this.finalToken,buttonName,datas,datas.tabInfo,void 0);break;default:break;}}}dialogClosedSetSamplingDate(e){console.log("dialogClosedSetSamplingDate",e.detail,this.fieldsDialogSetSamplingDate);if("confirmed"==e.detail.dialogState){var actionName="CHANGESAMPLINGDATE",datas=[];datas.schemaPrefix=this.schemaPrefix;this.backEndData.actionName=actionName;//datas.paramsUrl=paramsUrl;
datas.sample_id=this.backEndData.selectedObject.sample_id;datas.newDate=this.fieldsDialogSetSamplingDate[0].value;// datas.callBackFunction=this.refreshTable.bind(this);
this.sampleActionTrigger(this.schemaPrefix,this.finalToken,actionName,datas,datas.tabInfo,void 0)}}dialogClosedAddSampleAnalysis(e){if("confirmed"==e.detail.dialogState){var analysisName="",methodName="",methodVersion=0,i,len,selectedItems=e.detail.selectedItems;for(i=0,len=selectedItems.length,analysisName="",methodName="",methodVersion=0;i<len;i++){analysisName=selectedItems[i].code+"*String";methodName=selectedItems[i].method_name+"*String";methodVersion=selectedItems[i].method_version+"*Integer";var actionName="SAMPLEANALYSISADD",datas=[];datas.schemaPrefix=this.schemaPrefix;datas.actionName=actionName;// datas.paramsUrl=paramsUrl;   
datas.sample_id=this.backEndData.selectedObject.sample_id;datas.fieldName="analysis|method_name|method_version";datas.fieldValue=analysisName+"|"+methodName+"|"+methodVersion;this.sampleActionTrigger(this.schemaPrefix,this.finalToken,actionName,datas,datas.tabInfo,void 0)}}}dialogClosedTestAssignment(e){console.log("dialogClosedTestAssignment",e.detail,this.fieldsDialogTestAssignment);if("confirmed"==e.detail.dialogState){var actionName="TESTASSIGNMENT",datas=[];datas.schemaPrefix=this.schemaPrefix;this.backEndData.actionName=actionName;//datas.paramsUrl=paramsUrl;
datas.sample_id=+this.backEndData.selectedObject.sample_id;datas.sample_comment=this.fieldsDialogAddComment[0].value;// datas.callBackFunction=this.refreshTable.bind(this);
this.sampleActionTrigger(this.schemaPrefix,this.finalToken,actionName,datas,datas.tabInfo,void 0)}}}customElements.define("sample-elements",SampleElements)});