define(["exports","../../../config/api-config.js","../../../store.js","../app-functions/apiMessage.js"],function(_exports,_apiConfig,_store,_apiMessage){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.AuthenticationApi=void 0;//import { addNotification  } from '../../../app/Redux/actions/notifications_actions';
//import { foo } from '../redux/actions';
/**
 * @mixinFunction
 * @polymer
 */const AuthenticationApi=superClass=>class extends superClass{ajaxAuthenticate(data){var apiUrl=_apiConfig.backendUrl+_apiConfig.appAuthenticateApiUrl;//    console.log('authentication-api.ajaxAuthenticate', data, data.actionName);
axios.get(apiUrl,{params:{actionName:data.actionName,dbUserName:data.dbUserName,dbUserPassword:data.dbUserPassword}}).then(response=>{if(200==response.status){//            console.log(response.data);
if(data.callBackFunction){data.callBackFunction()}this.partialToken=response.data.myToken;this.userInfoId=response.data.userInfoId;this.ajaxUserRoles({actionName:"getuserrole",myToken:response.data.myToken});return}//console.log('.then , response!=200, calling callBackFunctionError', 'response.data', response.data);
//if (data.callBackFunctionError){data.callBackFunctionError();}
//var errMessage = ApiMessage.errorMessage(response.data);
this.dispatchEvent(new CustomEvent("toast-error",{bubbles:!0,composed:!0,detail:response.data.error_code//ApiMessage.errorMessage(response.data)
}))}).catch(function(error){//        console.log('.catch , calling callBackFunctionError', error.response.data, data.callBackFunctionError);
//if (data.callBackFunctionError){data.callBackFunctionError();}
//var errMessage = ApiMessage.errorMessage(response.data);
this.dispatchEvent(new CustomEvent("toast-error",{bubbles:!0,composed:!0,detail:response.data.error_code}))}).then(function(){})}ajaxUserRoles(data){var apiUrl=_apiConfig.backendUrl+_apiConfig.appAuthenticateApiUrl;//    console.log('authentication-api.ajaxUserRoles', data);
axios.get(apiUrl,{params:{actionName:data.actionName,myToken:data.myToken}}).then(response=>{if(200==response.status){//            console.log(response);
this.userRoles=response.data;this.fillUserRoleList();if(data.callBackFunction){data.callBackFunction()}return}if(data.callBackFunctionError){data.callBackFunctionError()}this.dispatchEvent(new CustomEvent("toasterror",{bubbles:!0,composed:!0,detail:"Error on authentication although the connectivity with the API ended with success! Status: "+response.status}))}).catch(function(error){if(data.callBackFunctionError){data.callBackFunctionError()}this.dispatchEvent(new CustomEvent("toasterror",{bubbles:!0,composed:!0,detail:"Error on getting user roles"}))}).then(function(){//        console.log('always executed')
})}ajaxFinalToken(data){var apiUrl=_apiConfig.backendUrl+_apiConfig.appAuthenticateApiUrl;//    console.log('authentication-api.ajaxUserRoles', data);
axios.get(apiUrl,{params:{actionName:data.actionName,myToken:data.partialToken,userRole:data.userRole}}).then(response=>{if(200==response.status){//            console.log(response);
this.finalToken=response.data.finalToken;this.appSessionId=response.data.appSessionId;this.appSessionStartDate=response.data.appSessionStartDate;this.initAppSession();if(data.callBackFunction){data.callBackFunction()}return}if(data.callBackFunctionError){data.callBackFunctionError()}this.dispatchEvent(new CustomEvent("toasterror",{bubbles:!0,composed:!0,detail:"Error on authentication although the connectivity with the API ended with success! Status: "+response.status}))}).catch(function(error){if(data.callBackFunctionError){data.callBackFunctionError()}this.dispatchEvent(new CustomEvent("toasterror",{bubbles:!0,composed:!0,detail:"Error on getting Token, Cannot proceed!"}))}).then(function(){//      console.log('always executed')
})}ajaxTokenValidateEsignPhrase(data){var apiUrl=_apiConfig.backendUrl+_apiConfig.appAuthenticateApiUrl;//console.log('authentication-api.ajaxUserRoles', data);
axios.get(apiUrl,{params:{actionName:"TOKEN_VALIDATE_ESIGN_PHRASE",myToken:data.myToken,esignPhraseToCheck:data.esignPhraseToCheck}}).then(response=>{if(200==response.status){//            console.log(response);
this.finalToken=response.data.finalToken;if(data.callBackFunction){data.callBackFunction()}return}if(data.callBackFunctionError){data.callBackFunctionError()}this.dispatchEvent(new CustomEvent("toasterror",{bubbles:!0,composed:!0,detail:"Error on authentication although the connectivity with the API ended with success! Status: "+response.status}))}).catch(function(error){if(data.callBackFunctionError){data.callBackFunctionError()}this.dispatchEvent(new CustomEvent("toasterror",{bubbles:!0,composed:!0,detail:"Error on getting Token, Cannot proceed!"}))}).then(function(){//      console.log('always executed')
})}ajaxTokenValidateUserCredentials(data){var apiUrl=_apiConfig.backendUrl+_apiConfig.appAuthenticateApiUrl;//console.log('authentication-api.ajaxUserRoles', data);
axios.get(apiUrl,{params:{actionName:"TOKEN_VALIDATE_USER_CREDENTIALS",myToken:data.myToken,userToCheck:data.userToCheck,passwordToCheck:data.passwordToCheck}}).then(response=>{if(200==response.status){//            console.log(response);
this.finalToken=response.data.finalToken;if(data.callBackFunction){data.callBackFunction()}return}if(data.callBackFunctionError){data.callBackFunctionError()}this.dispatchEvent(new CustomEvent("toasterror",{bubbles:!0,composed:!0,detail:"Error on authentication although the connectivity with the API ended with success! Status: "+response.status}))}).catch(function(error){if(data.callBackFunctionError){data.callBackFunctionError()}this.dispatchEvent(new CustomEvent("toasterror",{bubbles:!0,composed:!0,detail:"Error on getting Token, Cannot proceed!"}))}).then(function(){//      console.log('always executed')
})}};_exports.AuthenticationApi=AuthenticationApi});